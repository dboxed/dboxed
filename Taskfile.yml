# https://taskfile.dev

version: '3'

tasks:
  generate-migrations-sqlite:
    deps:
      - check-migration-name
    cmds:
      - rm -rf ./build/migrations/sqlite-schema
      - go run ./pkg/server/db/migration/templates ./build/migrations/sqlite-schema sqlite
      - atlas migrate diff --dir="file://pkg/server/db/migration/sqlite?format=goose" --to=file://./build/migrations/sqlite-schema --dev-url "sqlite://file?mode=memory" {{ .MIGRATION_NAME }}
  generate-migrations-postgres:
    deps:
      - check-migration-name
    cmds:
      - rm -rf ./build/migrations/postgres-schema
      - go run ./pkg/server/db/migration/templates ./build/migrations/postgres-schema postgres
      - atlas migrate diff "--dir=file://pkg/server/db/migration/postgres?format=goose" --to=file://./build/migrations/postgres-schema --dev-url "docker://postgres/17/dev?search_path=public" {{ .MIGRATION_NAME }}

  check-migration-name:
    run: once
    cmds:
      - echo "checking MIGRATION_NAME"
      - if [ "{{ .MIGRATION_NAME }}" = "" ]; then echo "please provide MIGRATION_NAME=xxx to the task invocation"; exit 1; fi

  generate-migrations:
    deps:
      - check-migration-name
      - generate-migrations-sqlite
      - generate-migrations-postgres

  goreleaser-helper:
    vars:
      GORELEASER_IMAGE: goreleaser/goreleaser-cross-pro:v1.25.1-v2.12.0
    cmds:
      - cmd: docker volume create goreleaser-cross-compile-cache
      - cmd: docker run --rm -i -v $(pwd):/app -w /app -e GORELEASER_KEY=$GORELEASER_KEY -e GITHUB_TOKEN=$GITHUB_TOKEN -e NO_GO_VERSION={{ or .NO_GO_VERSION "0" }} -v goreleaser-cross-compile-cache:/root/.cache -v goreleaser-cross-compile-cache:/root/go/pkg/mod/cache --use-api-socket {{ .DOCKER_ARGS }} {{ .GORELEASER_IMAGE }} {{ .GORELEASER_ARGS }}
        silent: false

  goreleaser-build-snapshot:
    cmds:
      - task: goreleaser-helper
        vars:
          GORELEASER_ARGS: build --clean --snapshot
          NO_GO_VERSION: "1"

  goreleaser-release-nightly:
    cmds:
      - task: goreleaser-helper
        vars:
          GORELEASER_ARGS: release --clean --nightly
